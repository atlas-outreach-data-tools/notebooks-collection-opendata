# Note that if you are working on the analysis development locally, i.e. outside
# of the REANA platform, you can proceed as follows:
#
#   $ mkdir snakemake-local-run
#   $ cd snakemake-local-run
#   $ python -m venv atlas-env
#   $ source atlas-env/bin/activate
#   $ pip install snakemake papermill ipykernel
#   $ cp -a ../OpenEvgenTutorial.ipynb .
#   $ snakemake -s ../snakemake/Snakefile \
#               --configfile ../snakemake/inputs.yaml
#               --config notebook=OpenEvgenTutorial.ipynb -p --cores 1
#   $ open results/plot.png

rule all: # Listing the expected final outputs as input for the rule
    input:
        config["output_file_delphes"]

rule extract_EVGEN:
    input:
        notebook=config["input_notebook"]
    params:
        input_release=config["input_release"],
        input_DSID=config["input_DSID"]
    output:
        output_file=config["output_file"],
        evgen_file=config["evgen_file"]
    container:
        "ghcr.io/atlas-outreach-data-tools/notebooks-collection-opendata:latest"
    shell:
        "mkdir -p results && papermill {input.notebook} /dev/null -p "
        "input_release {params.input_release} "
        "-p input_DSID {params.input_DSID} -p output_file {output.output_file} "
        "-p evgen_file {output.evgen_file} --log-output --log-level DEBUG --progress-bar"

rule delphes_SIM:
    input:
        notebook=config["input_notebook_delphes"],
        evgen_file=rules.extract_EVGEN.output.evgen_file
    output:
        output_file=config["output_file_delphes"]
    container:
        "ghcr.io/atlas-outreach-data-tools/notebooks-collection-opendata-delphes:latest"
    shell:
        "DelphesHepMC2 /opt/delphes/cards/delphes_card_ATLAS.tcl {output.output_file} {input.evgen_file} "
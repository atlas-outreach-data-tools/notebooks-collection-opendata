name: Run Jupyter Notebooks

on:
  # push:
  pull_request:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  find-notebooks:
    runs-on: ubuntu-latest
    outputs:
      notebooks: ${{ steps.get-notebooks.outputs.notebooks }}
      NOTEBOOKS8_cpp: ${{ steps.get-notebooks.outputs.notebooks8-cpp }}
      NOTEBOOKS8_python: ${{ steps.get-notebooks.outputs.notebooks8-python }}
      NOTEBOOKS13_cpp: ${{ steps.get-notebooks.outputs.notebooks13-cpp }}
      NOTEBOOKS13_python: ${{ steps.get-notebooks.outputs.notebooks13-python }}
      NOTEBOOKS13_uproot: ${{ steps.get-notebooks.outputs.notebooks13-uproot }}
      NOTEBOOKS13_rdataframe: ${{ steps.get-notebooks.outputs.notebooks13-rdataframe }}
      NOTEBOOKS_research: ${{ steps.get-notebooks.outputs.notebooks-research }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jq papermill

      - name: Get all notebooks
        id: get-notebooks
        run: |
          {
          NOTEBOOKS=$(find . -name '*.ipynb' -print0 | jq -Rsc 'split("\u0000")[:-1]')
          if [ -z "$NOTEBOOKS" ]; then
            echo "No notebooks found"
            NOTEBOOKS="[]"
          fi
          
          NOTEBOOKS8_cpp=$(find ./8-TeV-examples/cpp -name '*.ipynb' -print0 | jq -Rsc 'split("\u0000")[:-1]')
          if [ -z "$NOTEBOOKS8_cpp" ]; then
            echo "No notebooks found"
            NOTEBOOKS8_cpp="[]"
          fi
          echo "notebooks8-cpp=$NOTEBOOKS8_cpp" >> $GITHUB_OUTPUT

          NOTEBOOKS8_python=$(find ./8-TeV-examples/python -name '*.ipynb' -print0 | jq -Rsc 'split("\u0000")[:-1]')
          if [ -z "$NOTEBOOKS8_python" ]; then
            echo "No notebooks found"
            NOTEBOOKS8_python="[]"
          fi
          echo "notebooks8-python=$NOTEBOOKS8_python" >> $GITHUB_OUTPUT

          NOTEBOOKS13_cpp=$(find ./13-TeV-examples/cpp -name '*.ipynb' -print0 | jq -Rsc 'split("\u0000")[:-1]')
          if [ -z "$NOTEBOOKS13_cpp" ]; then
            echo "No notebooks found"
            NOTEBOOKS13_cpp="[]"
          fi
          echo "notebooks13-cpp=$NOTEBOOKS13_cpp" >> $GITHUB_OUTPUT

          NOTEBOOKS13_uproot=$(find ./13-TeV-examples/uproot_python -name '*.ipynb' -print0 | jq -Rsc 'split("\u0000")[:-1]')
          if [ -z "$NOTEBOOKS13_uproot" ]; then
            echo "No notebooks found"
            NOTEBOOKS13_uproot="[]"
          fi
          echo "notebooks13-uproot=$NOTEBOOKS13_uproot" >> $GITHUB_OUTPUT

          NOTEBOOKS13_python=$(find ./13-TeV-examples/python -name '*.ipynb' -print0 | jq -Rsc 'split("\u0000")[:-1]')
          if [ -z "$NOTEBOOKS13_python" ]; then
            echo "No notebooks found"
            NOTEBOOKS13_python="[]"
          fi
          echo "notebooks13-python=$NOTEBOOKS13_python" >> $GITHUB_OUTPUT

          NOTEBOOKS13_rdataframe=$(find ./13-TeV-examples/rdataframe -name '*.ipynb' -print0 | jq -Rsc 'split("\u0000")[:-1]')
          if [ -z "$NOTEBOOKS13_rdataframe" ]; then
            echo "No notebooks found"
            NOTEBOOKS13_rdataframe="[]"
          fi
          echo "notebooks13-rdataframe=$NOTEBOOKS13_rdataframe" >> $GITHUB_OUTPUT

          NOTEBOOKS_research=$(find ./for-research -name '*.ipynb' -print0 | jq -Rsc 'split("\u0000")[:-1]')
          if [ -z "$NOTEBOOKS_research" ]; then
            echo "No notebooks found"
            NOTEBOOKS_research="[]"
          fi
          echo "notebooks-research=$NOTEBOOKS_research" >> $GITHUB_OUTPUT
          
          cat $GITHUB_OUTPUT
          echo "Got all notebooks!"
          }

  run-notebooks-8-cpp:
    needs: find-notebooks
    runs-on: ubuntu-22.04
    container:
      image: atlasopendata/root_notebook:codata22
    if: ${{ needs.find-notebooks.result == 'success' && needs.find-notebooks.outputs.NOTEBOOKS8_cpp != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        notebook: ${{ fromJson(needs.find-notebooks.outputs.NOTEBOOKS8_cpp) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupyter ipykernel papermill

      - name: Set up Jupyter kernel
        run: |
          python -m ipykernel install --user --name=root

      - name: Run notebook with Papermill
        run: |
          cd $(dirname ${{ matrix.notebook }})
          papermill $(basename ${{ matrix.notebook }}) /dev/null


  run-notebooks-8-python:
    needs: find-notebooks
    runs-on: ubuntu-22.04
    container:
      image: atlasopendata/root_notebook:codata22
    if: ${{ needs.find-notebooks.result == 'success' && needs.find-notebooks.outputs.NOTEBOOKS8_python != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        notebook: ${{ fromJson(needs.find-notebooks.outputs.NOTEBOOKS8_python) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.11.6'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupyter ipykernel papermill

      - name: Set up Jupyter kernel
        run: |
          python -m ipykernel install --user --name=python3

      - name: Run notebook with Papermill
        run: |
          cd $(dirname ${{ matrix.notebook }})
          papermill $(basename ${{ matrix.notebook }}) /dev/null

  run-notebooks-13-cpp:
    needs: find-notebooks
    runs-on: ubuntu-22.04
    container:
      image: atlasopendata/root_notebook:codata22
    if: ${{ needs.find-notebooks.result == 'success' && needs.find-notebooks.outputs.NOTEBOOKS13_cpp != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        notebook: ${{ fromJson(needs.find-notebooks.outputs.NOTEBOOKS13_cpp) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.11.6'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupyter ipykernel papermill

      - name: Set up Jupyter kernel
        run: |
          python -m ipykernel install --user --name=root

      - name: Run notebook with Papermill
        run: |
          cd $(dirname ${{ matrix.notebook }})
          papermill $(basename ${{ matrix.notebook }}) /dev/null


  run-notebooks-13-python:
    needs: find-notebooks
    runs-on: ubuntu-22.04
    container:
      image: atlasopendata/root_notebook:codata22
    if: ${{ needs.find-notebooks.result == 'success' && needs.find-notebooks.outputs.NOTEBOOKS13_python != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        notebook: ${{ fromJson(needs.find-notebooks.outputs.NOTEBOOKS13_python) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.11.6'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupyter ipykernel papermill

      - name: Set up Jupyter kernel
        run: |
          python -m ipykernel install --user --name=python3

      - name: Run notebook with Papermill
        run: |
          cd $(dirname ${{ matrix.notebook }})
          papermill $(basename ${{ matrix.notebook }}) /dev/null

  run-notebooks-13-uproot:
    needs: find-notebooks
    runs-on: ubuntu-22.04
    container:
      image: atlasopendata/root_notebook:codata22
    if: ${{ needs.find-notebooks.result == 'success' && needs.find-notebooks.outputs.NOTEBOOKS13_uproot != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        notebook: ${{ fromJson(needs.find-notebooks.outputs.NOTEBOOKS13_uproot) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupyter ipykernel papermill

      - name: Set up Jupyter kernel
        run: |
          python -m ipykernel install --user --name=python3

      - name: Run notebook with Papermill
        run: |
          cd $(dirname ${{ matrix.notebook }})
          papermill $(basename ${{ matrix.notebook }}) /dev/null

  run-notebooks-13-rdataframe:
    needs: find-notebooks
    runs-on: ubuntu-22.04
    container:
      image: atlasopendata/root_notebook:codata22
    if: ${{ needs.find-notebooks.result == 'success' && needs.find-notebooks.outputs.NOTEBOOKS13_rdataframe != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        notebook: ${{ fromJson(needs.find-notebooks.outputs.NOTEBOOKS13_rdataframe) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupyter ipykernel papermill

      - name: Set up Jupyter kernel
        run: |
          python -m ipykernel install --user --name=python3

      - name: Run notebook with Papermill
        run: |
          cd $(dirname ${{ matrix.notebook }})
          papermill $(basename ${{ matrix.notebook }}) /dev/null

  run-notebooks-research:
    needs: find-notebooks
    runs-on: ubuntu-22.04
    container:
      image: atlasopendata/root_notebook:codata22
    if: ${{ needs.find-notebooks.result == 'success' && needs.find-notebooks.outputs.NOTEBOOKS_research != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        notebook: ${{ fromJson(needs.find-notebooks.outputs.NOTEBOOKS_research) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupyter ipykernel papermill

      - name: Set up Jupyter kernel
        run: |
          python -m ipykernel install --user --name=python3

      - name: Run notebook with Papermill
        run: |
          cd $(dirname ${{ matrix.notebook }})
          papermill $(basename ${{ matrix.notebook }}) /dev/null
